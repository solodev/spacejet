/** ===========================================
    # Theme Color Pallette
  ============================================ */
  
$white: #fff;
$black: #000;
$cta-color:#00a1db; 
$brand-1:#d30b5c;
$brand-2:#f1f6f7; 
$brand-3:#5c6771;

$colors: () !default;
$colors: map-merge(
  (
    "white": $white,
    "$cta-color": $cta-color, 
    "$brand-1": $brand-1,
    "$brand-2": $brand-2,
    "$brand-3": $brand-3,
    "black": $black
  ),
  $colors
);

$brand-1: $brand-1 !default;
$brand-2: $brand-2 !default;
$brand-3: $brand-3 !default;
$cta-color: $cta-color !default;
$white: $white  !default;
$black: $black !default;



$theme-colors: () !default;
$theme-colors: map-merge(
  (
    "brand-1":    $brand-1,
    "brand-2":    $brand-2,
    "brand-3":    $brand-3,
    "cta-color": $cta-color,
    "white":    $white,
    "black":    $black
  ),
  $theme-colors
);

/** ===========================================
    # Theme Type Settings
============================================ */
$primary-font: 'Inter', sans-serif;
$secondary-font: "proxima-nova", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
$fa-font: 'FontAwesome';
$font-size-base: 1rem !default; // Assumes the browser default, typically `16px`
$body-bg: $white !default;
$body-color: $black !default;
$smaller-font-size: 70%;
$font-weight-600: 600!default;
$font-weight-500: 500!default;

/** ===========================================
    # Theme Text and BG Hover Styles
============================================ */
@each $color, $value in $theme-colors {
  // Generate `.bg-*` color utilities
  @include bg-variant('.bg-#{$color}', $value);
  
  // Generate `.bg-hover*` color utilities
  .bg-hover-#{$color} {
    &:hover {
      background-color: #{$value} !important;
    }
  }

  // Generate `.text-*` color utilities
  @include text-emphasis-variant(".text-#{$color}", $value);
  
  .text-hover-#{$color} {
    &:hover {
      color: #{$value} !important;
    }
  }

  // Generate `.border-*` color utilities
  .border-#{$color} {
    border-color: $value !important;
  }
  // Generate `.btn-*` color utilities
  .btn-#{$color} {
    @include button-variant($value, $value);
  }

  // Generate `.btn-*` color utilities
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }

}
/** ===========================================
    # Spacing
============================================ */
$spacers: map-merge(
  (
    6: ($spacer * 4),  		
    7: ($spacer * 5),      
    8: ($spacer * 6),   
    9: ($spacer * 7),   
    10: ($spacer * 9)  
  ),
  $spacers
);

/** ===========================================
    # Sizing
============================================ */
// Height and Width Classes
// This variable affects the `.h-*` and `.w-*` classes.
// Iterate for what you need.
$sizes: () !default;
@for $i from 1 through 1000 {
  @if $i <= 100 {
    @if $i%5 == 0 {
      $holdingArrayPercent: (
        // Escape the Percentage Sign
        '#{$i}': #{$i}#{'%'}
      );
      $sizes: map-merge($sizes, $holdingArrayPercent);
      $holdingArrayPixels: (
      '#{$i}p': #{$i}px
      );
      $sizes: map-merge($sizes, $holdingArrayPixels);
    }
  }
  @if $i%25 == 0 {
    $holdingArrayPixels: (
      '#{$i}p': #{$i}px
    );
    $sizes: map-merge($sizes, $holdingArrayPixels);
  }
}

//Loop through each breakpoint and provide classes for the sizes within the sizes map from previous loop

@each $breakpoint-key, $breakpoint in $grid-breakpoints {
  @media (min-width: #{$breakpoint}) {
    @each $prop, $abbrev in (width: w-#{$breakpoint-key}, height: h-#{$breakpoint-key}) {
      @each $size, $length in $sizes {
         html .#{$abbrev}-#{$size} { #{$prop}: #{$length} !important;}
      }
    }
  }
}

// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                                true !default;
$enable-rounded:                              true !default;
$enable-shadows:                              true !default;
$enable-gradients:                            false !default;
$enable-transitions:                          true !default;
$enable-prefers-reduced-motion-media-query:   true !default;
$enable-hover-media-query:                    false !default; // Deprecated, no longer affects any compiled CSS
$enable-grid-classes:                         true !default;
$enable-pointer-cursor-for-buttons:           true !default;
$enable-print-styles:                         true !default;
$enable-responsive-font-sizes:                true !default;
$enable-validation-icons:                     true !default;
$enable-deprecation-messages:                 true !default;


